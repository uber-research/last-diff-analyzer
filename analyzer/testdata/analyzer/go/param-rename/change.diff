*** THIS DIFF EXISTS FOR INFORMATIONAL PURPOSES ONLY TO DESCRIBE CHANGES BETWEEN base.diff AND last.diff ***
***   CAVEAT: THIS DIFF IS GENERATED BY interdiff WHICH IS KNOWN TO BE OCCASIONALLY NOT FULLY ACCURATE   ***
diff -u rename.go rename.go
--- rename.go
+++ rename.go
@@ -7,47 +7,47 @@
 }
 
 // param tests parameter renaming
-func param(i int) (test, error) {
+func param(iRenamed int) (test, error) {
 	return test{
-		intValue: i,
+		intValue: iRenamed,
 	}, nil
 }
 
 // paramRedefineA tests parameter redefinition (variant A)
-func paramRedefineA(p bool, i int) int {
+func paramRedefineA(p bool, iRenamed int) int {
 	if p {
 		i := 42
 		return i
 	}
-	return i
+	return iRenamed
 }
 
 // paramRedefineB tests parameter redefinition (variant A)
 func paramRedefineB(p bool, i int) int {
 	if p {
-		i := 42
-		return i
+		iRenamed := 42
+		return iRenamed
 	}
 	return i
 }
 
 // paramInnerA tests parameter renaming in nested function (variant a)
-func paramInnerA(i int) int {
+func paramInnerA(iRenamed int) int {
 
 	f := func(i int) int {
 		fmt.Println(i)
 		return i
 	}
 
-	return i + f(7)
+	return iRenamed + f(7)
 }
 
 // paramInnerB tests parameter renaming in nested function (variant b)
 func paramInnerB(i int) int {
 
-	f := func(i int) int {
-		fmt.Println(i)
-		return i
+	f := func(iRenamed int) int {
+		fmt.Println(iRenamed)
+		return iRenamed
 	}
 
 	return i + f(7)
