*** THIS DIFF EXISTS FOR INFORMATIONAL PURPOSES ONLY TO DESCRIBE CHANGES BETWEEN base.diff AND last.diff ***
***   CAVEAT: THIS DIFF IS GENERATED BY interdiff WHICH IS KNOWN TO BE OCCASIONALLY NOT FULLY ACCURATE   ***
diff -u logging.java logging.java
--- logging.java
+++ logging.java
@@ -9,31 +9,31 @@
         logger.debug("Test1");
         // Change log level.
-        logger.debug("Test1");
-        logger.fatal("Test1");
+        logger.error("Test1");
+        logger.trace("Test1");
         // Removal of safe helper function.
-        logger.debug(String.format("%d %d", 1, 2));
+        logger.debug("3 + 4");
         // Removal of a logger statement.
-        logger.debug("Removal");
+        // logger.debug("Removal");
         // Addition of a logger statement.
-        // logger.debug("Addition");
+        logger.debug("Addition");
         // Binary and unary expressions.
         int x = 1;
         boolean y = false;
-        logger.debug(String.format("%d %b", x + 1, !y));
+        logger.debug(String.format("%d %b", 2 + x, y));
         // Literals.
-        logger.debug(String.format("%h %c %f %d", null, 'a', 1.1, 1));
+        logger.debug(String.format("%h %c %f %d", x, 'b', 2.2, 2));
     }
 
     private void test2() {
         // Call allowed method.
         logger.debug(String.format("%d", 1));
         // Call allowed method with different side-effect-free arguments.
-        logger.debug(String.format("%d %d", 1, 2));
+        logger.debug(String.format("%d %d", 3, 4));
         // Call allowed method, nested.
-        logger.info(String.format("%s", String.format("%s", String.format("%d", 1))));
+        logger.info(String.format("%s", String.format("%s", String.format("%d", 2))));
         // Call methods with side-effect, but with same arguments.
         logger.info(Baz.sideEffect(1));
         // Nested call.
-        logger.info(String.format("%d", Baz.sideEffect(1)));
+        logger.info(String.format("%d %d", Baz.sideEffect(1), 1));
     }
 }
